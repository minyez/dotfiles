#%Module1.0
#

module-whatis "general aliases and functions"

set-function is_macos {
  [[ ${OSTYPE} != ${OSTYPE##darwin} ]]  
}

set-alias la "ls -a"

# vi is alreadly aliased to vim on macOS Ventura
# Just map vim to neovim
set-alias v "nvim -O "
set-alias vim "nvim "
set-function _vi4 {
    #1 vim executable
    ##2,3,4,5 4 files to edit
    $1 -O $4 $5 -c "split $2" -c 'wincmd l"' -c "split $3"
}
set-function vi4 {
    _vi4 /usr/bin/vim $1 $2 $3 $4
}
set-function vim4 {
    _vi4 $HOMEBREW_PREFIX/bin/nvim $1 $2 $3 $4
}

# # false/true 
# set-alias false "/usr/bin/false"
# set-alias true "/usr/bin/true"

# tar
setenv COPYFILE_DISABLE 1 
#set-alias tar { bsdtar }
set-alias untargz  { tar -zxf }
set-alias untarbz  { tar -jxf }
set-function targz { args=("$@"); mkdir "$1" && cp -a "${args[@]:1}" "$1" &&  tar -zcf "${1}.tar.gz" "${1}" && rm -rf "$1" }
set-function tarbz { args=("$@"); mkdir "$1" && cp -a "${args[@]:1}" "$1" &&  tar -jcf "${1}.tar.bz" "${1}" && rm -rf "$1" }
set-function targzd {
    tar -zcf "${1}.tar.gz" "${1}"
}

# orginally open as an alias to xdg-open
# now set as a function to get rid of unnecessary error message
# set-function open { xdg-open $1 > /dev/null 2>&1}

# data related, isoformat
# today
set-alias td { date +"%Y-%m-%d"}
# datetime
set-alias dt { date +"%Y-%m-%d %H:%M:%S"}
# org mode datetime
set-alias odt { date +"%Y-%m-%d %a %H:%M"}

# ip
set-alias myip { curl ipinfo.io/ip }

# personal directory
set    my    "[getenv HOME]/Documents/minyez"
set    myrm  "[getenv HOME]/Library/CloudStorage/Dropbox/org-roam"
setenv M     "$my"
setenv MY    "$my"
setenv MYRM  "$myrm"
set-alias cm { cd "$MY" }
set-alias cmd { cd "$MY/Snippets/dotfiles" }
set-alias cmr { cd "$MYRM" }
# back-compatibility of my mind
# set-alias cdsd { cd "$MY" }
# set-alias cdsdrm { cd "$MYRM" }

# directory
set path_practice "$my/codes/code-practice"
setenv PATH_PRACTICE "$path_practice"
set-function practice {
  pdir="$PATH_PRACTICE/$1"
  if [ -d "$pdir" ];then
    cd "$pdir" || return 1
  else
    echo "\"$1\" not found under $PATH_PRACTICE"
    return 1
  fi
}

# module related
set-alias ma { module avail }

# proxies setup
# set http_proxy  http://127.0.0.1:9891
# set https_proxy http://127.0.0.1:9891
# set all_proxy   socks5://127.0.0.1:9892
# setenv http_proxy $http_proxy
# setenv https_proxy $https_proxy
# setenv all_proxy $all_proxy
# set-alias set_proxy { http_proxy=$https_proxy https_proxy=$https_proxy all_proxy=$all_proxy }

