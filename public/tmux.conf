# Use zsh as default
set -g default-shell /bin/zsh

# remap prefix from 'C-b' to 'C-a', as C-b conflicts with vim scroll up
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
# now bind key is Ctrl-a


# Ensure window index numbers get reordered on delete
set-option -g renumber-windows on

# Start windows and panes index at 1, instead of 0 by default
set -g base-index 1
setw -g pane-base-index 1

# move current window to top
bind-key T swap-window -t 1
# move current window to last
bind-key L swap-window -t -1


# Act like Vim; use h,j,k,l to select panes and move the cursor
set-window-option -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R


# use different keys to split vertical and horizonal
# <prefix> \ for vertical split
# <prefix> - for horizontal split
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"


# Allows for faster key repetition
set -sg escape-time 0


# Enable mouse support
set -g -q mouse on
# copy and paste with mouse
set -g @plugin 'tmux-plugins/tmux-yank'
# https://unix.stackexchange.com/questions/318281/how-to-copy-and-paste-with-a-mouse-with-tmux/318285#318285
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
# bind -n WheelDownPane select-pane -t= \; send-keys -M
# bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
# bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
# bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
# bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down
# unbind -T copy-mode-vi Enter
# if-shell "uname | grep -q Darwin" 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"; bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"'
# if-shell "uname | grep -q Linux" 'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"; bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"'

# must before resurrect
# set -g @plugin 'tmux-plugins/tmux-window-name'


# Continuous saving
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'


# ensure tpm is installed
run '[[ -d ~/.tmux/plugins/tpm ]] || git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm 2>&1'


# Catppuccin theme
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'mocha' # latte, frappe, macchiato, mocha
# Captppucin window appearance
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
# Captuppucin window text.
# By default the CW text is the directory. Change to the tmux window name for easy change
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W"
# module "application" is actually the tmux window name, now that we change the CW to it, we don't need this module here
set -g @catppuccin_status_modules_right "directory session date_time host"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
