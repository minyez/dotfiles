#!/usr/bin/env bash

# User specific environment
paths=(
  "$HOME/.cargo/bin"
  "$HOME/scripts"
  "$HOME/bin"
  "$HOME/.local/bin"
)
for p in "${paths[@]}"; do
  if ! [[ "$PATH" =~ "$p": ]]; then
    PATH="$p:$PATH"
  fi
done
export PATH

pver="3.11"
pps=(
  "/usr/lib64/python$pver/site-packages"
  "$HOME/scripts"
  "$HOME/.local/lib/python$pver/site-packages"
)
for pp in "${pps[@]}"; do
  if ! [[ "$PYTHONPATH" =~ $pp ]]; then
    PYTHONPATH="$pp:$PYTHONPATH"
  fi
done
export PYTHONPATH

# enable right alt as compose key for X keyboard
# setxkbmap -layout us -option compose:ralt

if command -v thefuck 1>/dev/null 2>&1; then
  eval $(thefuck --alias)
fi

#pyenv init
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  if command -v pyenv-virtualenv-init 1>/dev/null 2>&1; then
    eval "$(pyenv virtualenv-init -)"
  fi
fi

# rbenv initialization
if command -v rbenv 1>/dev/null 2>&1; then
  eval "$(rbenv init -)"
fi

# load nvm
if [ -d ~/.nvm ]; then
  . ~/.nvm/nvm.sh
  nvm use --silent node
fi

# rust
[ -f  "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

# # pandoc completion
# if command -v pandoc 1>/dev/null 2>&1; then
#   eval "$(pandoc --bash-completion)"
# fi

# [ -f  "$HOME/.xprofile" ] && source "$HOME/.xprofile"

[[ -f "$HOME/.alias" ]] && source "$HOME/.alias"
